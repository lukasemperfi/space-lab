class ContactForm extends HTMLElement{constructor(){super(),this.formData={name:"",email:"",message:""},this.errors={},this.isValid=!1}connectedCallback(){this.innerHTML=`
      <div class="contact-form-container">
        <form class="contact-form" id="contact-form">
          <div class="contact-form__field">
            <input 
              class="contact-form__input" 
              type="text" 
              name="name" 
              id="name"
              placeholder="Name" 
              autocomplete="off"
            />
            <div class="contact-form__error" id="name-error"></div>
          </div>
          
          <div class="contact-form__field">
            <input 
              class="contact-form__input" 
              type="email"  
              name="email" 
              id="email"
              placeholder="Mail" 
              autocomplete="off"
            />
            <div class="contact-form__error" id="email-error"></div>
          </div>
          
          <div class="contact-form__field">
            <input 
              class="contact-form__input" 
              type="text" 
              name="message" 
              id="message"
              placeholder="Your message" 
              autocomplete="off"
            />
            <div class="contact-form__error" id="message-error"></div>
          </div>
          
                    <button 
            class="contact-form__button wavy-button--reverse" 
            type="submit"
            id="submit-btn"
            disabled
          >
            Send
          </button>
        </form>
      </div>
    `,this.initializeForm()}initializeForm(){this.form=this.querySelector("#contact-form"),this.submitBtn=this.querySelector("#submit-btn"),this.inputs=this.querySelectorAll(".contact-form__input"),this.errorElements=this.querySelectorAll(".contact-form__error"),this.form.addEventListener("submit",t=>this.handleSubmit(t)),this.inputs.forEach(t=>{t.addEventListener("input",()=>this.handleInputChange(t)),t.addEventListener("blur",()=>this.validateField(t)),t.addEventListener("focus",()=>this.clearFieldError(t))}),this.updateSubmitButton()}handleInputChange(t){var e=t.name;this.formData[e]=t.value.trim(),this.validateField(t),this.updateSubmitButton()}validateField(t){var e=t.name,s=t.value.trim();this.querySelector(`#${e}-error`);let r="";switch(e){case"name":s?s.length<2?r="Name must be at least 2 characters":50<s.length&&(r="Name must be less than 50 characters"):r="Name is required";break;case"email":s?this.isValidEmail(s)||(r="Please enter a valid email address"):r="Email is required";break;case"message":s?s.length<10?r="Message must be at least 10 characters":500<s.length&&(r="Message must be less than 500 characters"):r="Message is required"}return r?(this.errors[e]=r,this.showFieldError(t,r)):(delete this.errors[e],this.clearFieldError(t)),!r}isValidEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}showFieldError(t,e){var s=t.name,s=this.querySelector(`#${s}-error`);s&&(s.textContent=e,s.style.display="block"),t.classList.add("contact-form__input--error")}clearFieldError(t){var e=t.name,e=this.querySelector(`#${e}-error`);e&&(e.textContent="",e.style.display="none"),t.classList.remove("contact-form__input--error")}updateSubmitButton(){var t=0<Object.keys(this.errors).length,e=Object.values(this.formData).every(t=>""!==t.trim());this.isValid=!t&&e,this.submitBtn.disabled=!this.isValid}handleSubmit(t){t.preventDefault(),this.isValid&&(this.showSuccessToast(),this.resetForm())}showSuccessToast(){let t=document.querySelector("toast-notification");t||(t=document.createElement("toast-notification"),document.body.appendChild(t)),t.show("Form submitted successfully! Thank you for your message.","success")}resetForm(){this.form.reset(),this.formData={name:"",email:"",message:""},this.errors={},this.errorElements.forEach(t=>{t.textContent="",t.style.display="none"}),this.inputs.forEach(t=>{t.classList.remove("contact-form__input--error")}),this.updateSubmitButton()}}customElements.define("contact-form",ContactForm);
//# sourceMappingURL=ContactForm.min.js.map
